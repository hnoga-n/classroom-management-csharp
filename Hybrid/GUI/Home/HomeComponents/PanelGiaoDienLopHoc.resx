<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnChinhSuaLopHoc.StateCommon.Back.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAY5JREFUOE+llcsuBEEUQCdC2Ak2JGy94i1eESxY8FnYYGePhFgSgmCBRLwSW/yP
        c6qnolPTw0yc5EhVTfVVd+renlINtOFk2VYX/ssunuA5brtQL2vYnA0Dd9iBXXjtQhn3rGbD6mziPb7h
        AC7gJ0a+cA778RUfcB0LWcFHbMBhfMJ9HMHIOB6hn7nuXp/x2Qoa0Y1TYVYb/gNP2hRmBfShQVP8/jTl
        BXuzYTGLuJcNAz3od3qBl+Wxa5FjnMmGP1hnloa3+YFDGDHAbDYMeCHui0ygl+aaMYwVCvYU253kMEVP
        leJamr5lZQxjhT8WbaeTHNUCXmEa0GeNEQLaTnbALaYpm4ppRuYxn7IBTPkGt7CiNZew6FI8qSczWDdG
        vJTpbFjMIFqoKaaYpinPaNcUYm/acqNhVht+Pe/YEmYJvhRMz3ayHCzaA8y33hgeoidzj3vtZ58tZANN
        2W6xA3w5eFERL8BL8jP3uNcXyq8so30d8dTWqKVhJUTcU/hS+Iv4gj3DHRf+Sx0/AaXSN8p9SGRytiLp
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnChinhSuaLopHoc.StateCommon.Content.ShortText.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAuVJREFUSEvVl8evTkEYhy9RN0iUhZYgyp5YYSmsJIIEsSB6EBsLvS2UjfgjlERd
        IEpEibbwLxCEnd7LxvPMnPOZb3zl+O4V8Uue3HfOPTNzZuZ933m/rv9Jk+A+PCy4B2Pgr2s1PC7+ygtY
        Cj2mgdA7mnU6AieiGXQeDkSzTvYdEM3qmgBPwW0c74NEV2BXNIP2w4Vo1jQO7PuksCvJSZ/BKTgL72AZ
        DIMt8B7mQ6mF8BY2wxBYXLTdidPgAvKP/019wRft0McHaBV8hB9wDZaD75XqB75zG77CZ1gLyjHOgCtP
        +zTUVXA7e4VWlLswLZotNQP0+lKO4XjSViPhJWwMre7J7X8NlcNtEbhlE0OrM02BL7AgtCpqBHyHqaFV
        r7FwGG4VHIJGK5oFfvyg0KqorXA5mnWaCx/gLuwuMGz09DmQy/9tiGZj6RBmoaOg5+rFhlAqV+qkOyB1
        PG3j2slH+yDRejC0dFYTj3PUHZ+59xEch20wD8pwKuX2utJ00lI+c3UHQ+uX+oMxvxNOgqnWuWoy2a+J
        ZlN5nmnGyrUHbkSzqZzDuWqqMvFN8EybqaOJ3SZvGVPkPnB78q3We32v2VY/gPyycKsNJ/P5OXAOj6sm
        w8GrzTO6BDpK7ly+43O3O51c29Wa00f5IJHO9Qa8RBx7CbRMJoaTnpjLkNGzXbnb7oSu1A+aDbl0pJbh
        lGs4NEsghoxf75mL25uvVJlAzFyDQ6ui3GZj2cuhU02GT+A1WUle3J7XytDqntaBCaRtMWC54vl5h6Yy
        s02PZkvNBFeaSm92zEZlVE3WWWkhoMduApP9N7gOK6BRIXAHPFOxj30dw0rGMdvWX5Ypvuiq9exXYCwO
        BUsfvdqUWsqY92jK0sdSyD72dYxKpU8pX7RcsbOFQSovke3RDNoLF6NZk15u1eEYlSctlWeuUt5gx6IZ
        ZLbLL4dSbeusP5H5Ni3on0OPFvTNlP+EMfdWrqn+sbq6fgLW/qOUM1Y3zgAAAABJRU5ErkJggg==
</value>
  </data>
</root>