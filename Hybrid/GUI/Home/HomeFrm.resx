<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnTaoLop.StateCommon.Back.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAydJREFUSEvF1lmoTVEcx/FrFplnHjxIUSKRKSI8yPSIyINM5UHm4ZF4kCmReYpE
        iPCkDJHMSlESGS8h44sxw/e79933rnOdfc5178GvPrXO2Xuv/x7WXmsXpWQpfv4lx5GazTiMHgW2DNeR
        ms4lCp1pSC1cG97q+3iHE+iIQiRn4X24h/EYgr14i3aoalILd8E3dIh+leUk1sXN3zIAq9Av+pU7qYXH
        4W7czMhcnI2bGemLLziFj2iGXEkt3Ad20CT6VZY92BE3S9MST+HV9sJ35HscqYVr4AK8gk7wBObgM7oj
        ifu5zzm0gANxI/Il5+BqDUfyD/jCF2MEasHi0+Ek8BxtS9pXUQf5klq4HpbAq3ZkO5rd8SY+4StuYBO6
        YTFeoz0qktTCO+HgmgV3SkyGA6kuTAP4CDyRYf5RwaQW/oDhcTNrRuIAHIBPMAZhmiM84YSPxNjOWthn
        6pyaLV3h9l0YCgdY+XhsshiEkjeiUoWTTnMlrfAMmCoV9nYnI76yfFMy4p/5CteHgy15fn/KpdF+MlKR
        wqPwX6644OkPO76I2QhHravVQbh9JRohSUOsgIvINoSTSU3Yl9Orr2FvZMSizsfrsQC+o37+mFZ4BadR
        VylnLqdIT8yOr5T8dkI5hpdwATFb8Rj2aX/WyCh+BBviZhRvq8/RK3NatONqMP7nROO7PBjv4VUb97mG
        eWgM+wgXF4vvj5txzmNh3IzSFN5WV6i1OIQwD+EXygQ88I8gfiSugcfah30lWQRXtNI4N3t7vVJ33I1b
        qI6BcIp0NDtHz4ffYq5ibeAVe4VuGw339avEY2/Dmc4+e8L1eyZK43N8A88wkcw2Lnc+x3Dbdhhvre1w
        m/smS6R9hNtcyZLnHzUe4RLGwg88b5UrzySchrd2CgbBR+IzXg33s+3gcZv72JfHeKx9uI992vdl2FdU
        fAss6ggN44LvWb6AXxlhHJl+FMrPnjB26sj22Kn+EcQaFnc9j74kPJvy8Tb6/HxHs+UMvLJs8V13HCRv
        Qhg/KJ/ZcMhPhAOrvDtYXu6/xNES2bZ5jMdm22Yta0bzZjgA/oGi4l9tgj7eY6NePgAAAABJRU5ErkJg
        gg==
</value>
  </data>
  <data name="btnThamGia.StateCommon.Back.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAATFJREFUSEvt1rFLQkEAx/GXBG05RQYuNTrY0Jq4GS5tbc1Ci5tLEAgFTW0t/QNS
        /0F7tgVuzQ3aErQERi36/T3t+Xocds+4W3w/+MjdIffz4PC9IMvSZAt7nmwiyiNGnnQR5QmNydBp1KGu
        KFnxf7OKNvrhbBanxdvQZX1FTQuxOCs+wjvuUdBCIqmLczjFAAdaSCSPDoY4wQpMSVW8AZ3gDdf4QhM/
        2ccLeihpYU6si6vQKR9Q1AI5xAducI5vXGENf8WquAVtegnd0njK0ClNF2herIrvUJ8MjVmfShOrYhfJ
        io3FFejmmuxikVgVa256nsotFsmv4h084wLxNwXNTaVyhvh3bWlPden/PPiEaXOX1BkO9Gt8RV3qDD+O
        pws+qCss1sNaA5+SLwhZXCUIxnHwv0LxOmg0AAAAAElFTkSuQmCC
</value>
  </data>
</root>